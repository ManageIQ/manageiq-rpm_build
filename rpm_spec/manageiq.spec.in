%global org_name ORG_NAME
%global product_name PRODUCT_NAME
%global product_summary PRODUCT_SUMMARY
%global product_url PRODUCT_URL

%global app_root /var/www/miq/vmdb
%global org_root /opt/%{org_name}
%global appliance_root %{org_root}/%{name}-appliance
%global gemset_root %{org_root}/%{name}-gemset
%global manifest_root %{org_root}/manifest

%global appliance_builddir %{name}-appliance-%{version}
%global core_builddir %{name}-core-%{version}
%global gemset_builddir %{name}-gemset-%{version}
%global manifest_builddir %{name}-manifest-%{version}

%global debug_package %{nil}
%global __requires_exclude ^\/usr\/bin\/jruby

Name:     %{product_name}
Version:  RPM_VERSION
Release:  RPM_RELEASE%{?dist}
Summary:  %{product_summary}

License:  Apache-2.0
URL:      %{product_url}

Source0:  %{name}-appliance-%{version}.tar.gz
Source1:  %{name}-core-%{version}.tar.gz
Source2:  %{name}-gemset-%{version}.tar.gz
Source3:  %{name}-manifest-%{version}.tar.gz

%description
%{product_summary}

%prep
%setup -q -n %{appliance_builddir}
%setup -q -T -D -b 1 -n %{core_builddir}
%setup -q -T -D -b 2 -n %{gemset_builddir}
%setup -q -T -D -b 3 -n %{manifest_builddir}

# buildsubdir is set to the last extracted archive (gemset), reset
cd %{_builddir}

pathfix.py -pni "%{__python3} %{py3_shbang_opts}" %{gemset_builddir}

%build
cd %{_builddir}

cat <<"EOF" > %{appliance_builddir}/LINK/etc/default/manageiq-productizaton.properties
APPLIANCE_SOURCE_DIRECTORY=%{appliance_root}
APPLIANCE_TEMPLATE_DIRECTORY=%{appliance_root}/TEMPLATE
GEM_HOME=%{gemset_root}
GEM_PATH=%{gemset_root}:/usr/share/gems:/usr/local/share/gems
PATH=%{gemset_root}/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin
EOF

%install
cd %{_builddir}

### from core
%{__mkdir} -p %{buildroot}%{app_root}
%{__cp} -r %{core_builddir}/* %{buildroot}%{app_root}

### from appliance
%{__mkdir} -p %{buildroot}%{appliance_root}
%{__cp} -r %{appliance_builddir}/* %{buildroot}%{appliance_root}
%{__mkdir} -p %{buildroot}/etc/httpd/conf.d
%{__mkdir} -p %{buildroot}%{app_root}/log/apache

### from gemset
%{__mkdir} -p %{buildroot}%{gemset_root}
%{__cp} -r %{gemset_builddir}/bin %{buildroot}%{gemset_root}
%{__cp} -r %{gemset_builddir}/build_info %{buildroot}%{gemset_root}
%{__cp} -r %{gemset_builddir}/bundler %{buildroot}%{gemset_root}
%{__cp} -r %{gemset_builddir}/cache %{buildroot}%{gemset_root}
%{__cp} -r %{gemset_builddir}/doc %{buildroot}%{gemset_root}
%{__cp} -r %{gemset_builddir}/extensions %{buildroot}%{gemset_root}
%{__cp} -r %{gemset_builddir}/gems %{buildroot}%{gemset_root}
%{__cp} -r %{gemset_builddir}/specifications %{buildroot}%{gemset_root}
%{__cp} -r %{gemset_builddir}/vmdb %{buildroot}%{gemset_root}

# Copy systemd unit files
%{__mkdir} -p %{buildroot}%{_prefix}/lib/systemd/system
%{__cp} %{core_builddir}/systemd/* %{buildroot}/%{_prefix}/lib/systemd/system
%{__cp} %{gemset_builddir}/bundler/gems/*/systemd/* %{buildroot}/%{_prefix}/lib/systemd/system

### from manifest
%{__mkdir} -p %{buildroot}%{manifest_root}
%{__cp} -r %{manifest_builddir}/* %{buildroot}%{manifest_root}

# Move webpack manifests
%{__mv} %{buildroot}%{app_root}/public/packs/webpack_modules_manifest.json %{buildroot}%{manifest_root}
%{__mv} %{buildroot}%{app_root}/public/packs/webpack_packages_manifest.json %{buildroot}%{manifest_root}
%{__mv} %{buildroot}%{app_root}/public/ui/service/webpack_modules_manifest.json %{buildroot}%{manifest_root}/webpack_modules_manifest_service_ui.json
%{__mv} %{buildroot}%{app_root}/public/ui/service/webpack_packages_manifest.json %{buildroot}%{manifest_root}/webpack_packages_manifest_service_ui.json

## from appliance
#symlink some executables
%{__mkdir} -p %{buildroot}/%{_bindir}
pushd ./%{appliance_builddir}/LINK/usr/bin
  for filename in `ls`; do
    ln -s %{appliance_root}/LINK/usr/bin/$filename %{buildroot}/%{_bindir}/$filename
  done
popd

#symlink some configuration files
pushd ./%{appliance_builddir}/LINK/etc
  for dirname in `ls`; do
    pushd ./$dirname
      %{__mkdir} -p %{buildroot}/%{_sysconfdir}/$dirname
      for filename in `ls`; do
        ln -s %{appliance_root}/LINK/etc/$dirname/$filename %{buildroot}/%{_sysconfdir}/$dirname/$filename
      done
    popd
  done
popd

%{__mkdir} -p %{buildroot}/root
pushd ./%{appliance_builddir}/LINK/root
  ln -s %{appliance_root}/LINK/root/.ansible.cfg %{buildroot}/root/.ansible.cfg
popd

pushd ./%{appliance_builddir}/LINK
  ln -s %{appliance_root}/LINK/.toprc %{buildroot}/.toprc
popd

#copy all files/directories below COPY
%{__cp} -r ./%{appliance_builddir}/COPY/* %{buildroot}/

%clean
rm -rf $RPM_BUILD_ROOT

